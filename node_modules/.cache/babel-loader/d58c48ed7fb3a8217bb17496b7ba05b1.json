{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Context}from\"../Context\";function Image(_ref){var className=_ref.className,img=_ref.img;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHovered=_useState2[1];var _useContext=useContext(Context),toggleFavorite=_useContext.toggleFavorite,addToCart=_useContext.addToCart,cartItems=_useContext.cartItems,removeFromCart=_useContext.removeFromCart;function heartIcon(){//'Heart' icon on the image\nif(img.isFavorite){//'Heart' toggler\nreturn React.createElement(\"i\",{className:\"ri-heart-fill favorite\",onClick:function onClick(){return toggleFavorite(img.id);}});}else if(hovered){return React.createElement(\"i\",{className:\"ri-heart-line favorite\",onClick:function onClick(){return toggleFavorite(img.id);}});}}function cartIcon(){//'Shopping Cart' icon on the image\nvar alreadyInCart=cartItems.some(function(item){return item.id===img.id;});//if the item was already added\nif(alreadyInCart){//another click on the icon will remove it from cart         \nreturn React.createElement(\"i\",{className:\"ri-shopping-cart-fill cart\",onClick:function onClick(){return removeFromCart(img);}});}else if(hovered){return React.createElement(\"i\",{className:\"ri-add-circle-line cart\",onClick:function onClick(){return addToCart(img);}});//and add it again. pretty much a toggler function\n}}return React.createElement(\"div\",{className:\"\".concat(className,\" image-container\"),onMouseEnter:function onMouseEnter(){return setHovered(true);}//when the mouse enter the image area, set hovered state to true\n,onMouseLeave:function onMouseLeave(){return setHovered(false);}//if it leaves, to false\n},React.createElement(\"img\",{src:img.url,className:\"image-grid\"}),\" \",heartIcon(),cartIcon());}export default Image;","map":{"version":3,"sources":["C:/Users/User/my-app/src/components/Image.js"],"names":["React","useState","useContext","Context","Image","className","img","hovered","setHovered","toggleFavorite","addToCart","cartItems","removeFromCart","heartIcon","isFavorite","id","cartIcon","alreadyInCart","some","item","url"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CAGA,OAAQC,OAAR,KAAsB,YAAtB,CAEA,QAASC,CAAAA,KAAT,MAAiC,IAAjBC,CAAAA,SAAiB,MAAjBA,SAAiB,CAANC,GAAM,MAANA,GAAM,eACCL,QAAQ,CAAC,KAAD,CADT,wCACtBM,OADsB,eACbC,UADa,+BAEkCN,UAAU,CAACC,OAAD,CAF5C,CAEtBM,cAFsB,aAEtBA,cAFsB,CAENC,SAFM,aAENA,SAFM,CAEKC,SAFL,aAEKA,SAFL,CAEgBC,cAFhB,aAEgBA,cAFhB,CAI7B,QAASC,CAAAA,SAAT,EAAqB,CAAE;AACnB,GAAGP,GAAG,CAACQ,UAAP,CAAmB,CAAE;AACjB,MAAO,0BAAG,SAAS,CAAC,wBAAb,CAAsC,OAAO,CAAE,yBAAML,CAAAA,cAAc,CAACH,GAAG,CAACS,EAAL,CAApB,EAA/C,EAAP,CACH,CAFD,IAEO,IAAGR,OAAH,CAAY,CACf,MAAO,0BAAG,SAAS,CAAC,wBAAb,CAAsC,OAAO,CAAE,yBAAME,CAAAA,cAAc,CAACH,GAAG,CAACS,EAAL,CAApB,EAA/C,EAAP,CACH,CACJ,CAED,QAASC,CAAAA,QAAT,EAAoB,CAAY;AAC5B,GAAMC,CAAAA,aAAa,CAAGN,SAAS,CAACO,IAAV,CAAe,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,EAAL,GAAYT,GAAG,CAACS,EAApB,EAAnB,CAAtB,CAAgE;AAChE,GAAGE,aAAH,CAAkB,CAAU;AACxB,MAAO,0BAAG,SAAS,CAAC,4BAAb,CAA0C,OAAO,CAAE,yBAAML,CAAAA,cAAc,CAACN,GAAD,CAApB,EAAnD,EAAP,CACH,CAFD,IAEO,IAAGC,OAAH,CAAY,CACf,MAAO,0BAAG,SAAS,CAAC,yBAAb,CAAuC,OAAO,CAAE,yBAAMG,CAAAA,SAAS,CAACJ,GAAD,CAAf,EAAhD,EAAP,CAAiF;AACpF,CACJ,CAED,MACI,4BACI,SAAS,WAAKD,SAAL,oBADb,CAEI,YAAY,CAAE,8BAAMG,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAAwB;AAF1C,CAGI,YAAY,CAAE,8BAAMA,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAAwB;AAH1C,EAKI,2BAAK,GAAG,CAAEF,GAAG,CAACc,GAAd,CAAmB,SAAS,CAAC,YAA7B,EALJ,KAMKP,SAAS,EANd,CAOKG,QAAQ,EAPb,CADJ,CAWH,CAWD,cAAeZ,CAAAA,KAAf","sourcesContent":["import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Image({className, img}) {\r\n    const [hovered, setHovered] = useState(false)\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\r\n    \r\n    function heartIcon() { //'Heart' icon on the image\r\n        if(img.isFavorite) { //'Heart' toggler\r\n            return <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-heart-line favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        }\r\n    }\r\n    \r\n    function cartIcon() {           //'Shopping Cart' icon on the image\r\n        const alreadyInCart = cartItems.some(item => item.id === img.id)//if the item was already added\r\n        if(alreadyInCart) {         //another click on the icon will remove it from cart         \r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>//and add it again. pretty much a toggler function\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`${className} image-container`}\r\n            onMouseEnter={() => setHovered(true)} //when the mouse enter the image area, set hovered state to true\r\n            onMouseLeave={() => setHovered(false)}//if it leaves, to false\r\n        >\r\n            <img src={img.url} className=\"image-grid\"/> {/* display the image */}\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,  //prop types to ensure the properties will be of a specific type\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image\r\n"]},"metadata":{},"sourceType":"module"}