{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Context}from\"../Context\";import CartItem from\"../components/CartItem\";function Cart(){var _useState=useState(\"Place Order\"),_useState2=_slicedToArray(_useState,2),buttonText=_useState2[0],setButtonText=_useState2[1];var _useContext=useContext(Context),cartItems=_useContext.cartItems,emptyCart=_useContext.emptyCart,priceItems=_useContext.priceItems,setPriceItems=_useContext.setPriceItems;var totalCostDisplay=priceItems.toLocaleString(\"en-US\",{style:\"currency\",currency:\"USD\"});var cartItemElements=cartItems.map(function(item){return React.createElement(CartItem,{key:item.id,item:item});});function placeOrder(){setButtonText(\"Ordering...\");setTimeout(function(){console.log(\"Order placed!\");setButtonText(\"Place Order\");emptyCart();setPriceItems(0);},3000);//not actual order effect, just a timer for 3 sec\n}return React.createElement(\"main\",{className:\"cart-page\"},React.createElement(\"h1\",null,\"Check out\"),cartItemElements,React.createElement(\"p\",{className:\"total-cost\"},\"Total: \",totalCostDisplay),cartItems.length?//render order button if there are any items in the cart\nReact.createElement(\"div\",{className:\"order-button\"},React.createElement(\"button\",{onClick:placeOrder},buttonText)):React.createElement(\"p\",{className:\"no-items\"},\"You have no items in your cart\")//otherwise display no items added\n);}export default Cart;","map":{"version":3,"sources":["C:/Users/User/my-app/src/pages/Cart.js"],"names":["React","useState","useContext","Context","CartItem","Cart","buttonText","setButtonText","cartItems","emptyCart","priceItems","setPriceItems","totalCostDisplay","toLocaleString","style","currency","cartItemElements","map","item","id","placeOrder","setTimeout","console","log","length"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAAQC,OAAR,KAAsB,YAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA,QAASC,CAAAA,IAAT,EAAgB,eACwBJ,QAAQ,CAAC,aAAD,CADhC,wCACLK,UADK,eACOC,aADP,+BAE8CL,UAAU,CAACC,OAAD,CAFxD,CAELK,SAFK,aAELA,SAFK,CAEMC,SAFN,aAEMA,SAFN,CAEiBC,UAFjB,aAEiBA,UAFjB,CAE6BC,aAF7B,aAE6BA,aAF7B,CAGZ,GAAMC,CAAAA,gBAAgB,CAAGF,UAAU,CAACG,cAAX,CAA0B,OAA1B,CAAmC,CAACC,KAAK,CAAE,UAAR,CAAoBC,QAAQ,CAAE,KAA9B,CAAnC,CAAzB,CAEA,GAAMC,CAAAA,gBAAgB,CAAGR,SAAS,CAACS,GAAV,CAAc,SAAAC,IAAI,QACvC,qBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACC,EAApB,CAAwB,IAAI,CAAED,IAA9B,EADuC,EAAlB,CAAzB,CAIA,QAASE,CAAAA,UAAT,EAAsB,CAClBb,aAAa,CAAC,aAAD,CAAb,CACAc,UAAU,CAAC,UAAM,CACbC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAhB,aAAa,CAAC,aAAD,CAAb,CACAE,SAAS,GACTE,aAAa,CAAC,CAAD,CAAb,CACH,CALS,CAKP,IALO,CAAV,CAKU;AACb,CAED,MACI,6BAAM,SAAS,CAAC,WAAhB,EACI,0CADJ,CAEKK,gBAFL,CAGI,yBAAG,SAAS,CAAC,YAAb,YAAkCJ,gBAAlC,CAHJ,CAKQJ,SAAS,CAACgB,MAAV,CAAsB;AACtB,2BAAK,SAAS,CAAC,cAAf,EACI,8BAAQ,OAAO,CAAEJ,UAAjB,EAA8Bd,UAA9B,CADJ,CADA,CAIA,yBAAG,SAAS,CAAC,UAAb,mCAA0D;AATlE,CADJ,CAcH,CAED,cAAeD,CAAAA,IAAf","sourcesContent":["import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport CartItem from \"../components/CartItem\"\r\n\r\nfunction Cart() {\r\n    const [buttonText, setButtonText] = useState(\"Place Order\")\r\n    const {cartItems, emptyCart, priceItems, setPriceItems} = useContext(Context)\r\n    const totalCostDisplay = priceItems.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n    \r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n    \r\n    function placeOrder() {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout(() => {\r\n            console.log(\"Order placed!\")\r\n            setButtonText(\"Place Order\")\r\n            emptyCart()\r\n            setPriceItems(0)\r\n        }, 3000)  //not actual order effect, just a timer for 3 sec\r\n    }\r\n    \r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\r\n            {\r\n                cartItems.length ?    //render order button if there are any items in the cart\r\n                <div className=\"order-button\">\r\n                    <button onClick={placeOrder}>{buttonText}</button>\r\n                </div> :\r\n                <p className=\"no-items\">You have no items in your cart</p>//otherwise display no items added\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart"]},"metadata":{},"sourceType":"module"}