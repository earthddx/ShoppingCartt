{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\User\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\User\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\User\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";var Context=React.createContext();function ContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allPhotos=_useState2[0],setAllPhotos=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),priceItems=_useState6[0],setPriceItems=_useState6[1];var url=\"https://raw.githubusercontent.com/earthddx/ShoppingCartt/master/images.json\";useEffect(function(){fetch(url).then(function(res){return res.json();}).then(function(data){return setAllPhotos(data);});},[]);//fecth data from images.json when component renders\nfunction toggleFavorite(id){var updatedArr=allPhotos.map(function(photo){//map the array of all photos \nif(photo.id===id){//to see if the photo we favorited is in the array\nreturn _objectSpread({},photo,{isFavorite:!photo.isFavorite});//if so, return a new obect with !isFavorite\n}return photo;//if not, return the object\n});setAllPhotos(updatedArr);//update array of all photos with new isFavorite property\n}function addToCart(newItem){setCartItems(function(prevItems){return[].concat(_toConsumableArray(prevItems),[newItem]);});//every time a new item added to the cart, \nsetPriceItems(function(prevPrice){return prevPrice+newItem.price;});// we have to calculate total price\n}function removeFromCart(newItem){setCartItems(function(prevItems){return prevItems.filter(function(item){return item.id!==newItem.id;});});//if the item is removed from cart\nsetPriceItems(function(prevPrice){return prevPrice-newItem.price;});//calculate total price again\n}function emptyCart(){//empty cart after order is complete\nsetCartItems([]);}return React.createElement(Context.Provider,{value:{allPhotos:allPhotos,toggleFavorite:toggleFavorite,cartItems:cartItems,addToCart:addToCart,removeFromCart:removeFromCart,emptyCart:emptyCart,priceItems:priceItems,setPriceItems:setPriceItems}},children);}export{ContextProvider,Context};//export both instead of just 'Context.provider' so we could use Context","map":{"version":3,"sources":["C:/Users/User/my-app/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","allPhotos","setAllPhotos","cartItems","setCartItems","priceItems","setPriceItems","url","fetch","then","res","json","data","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","prevPrice","price","removeFromCart","filter","item","emptyCart"],"mappings":"8UAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,aAAN,EAAhB,CAEA,QAASC,CAAAA,eAAT,MAAqC,IAAXC,CAAAA,QAAW,MAAXA,QAAW,eACCL,QAAQ,CAAC,EAAD,CADT,wCAC1BM,SAD0B,eACfC,YADe,8BAECP,QAAQ,CAAC,EAAD,CAFT,yCAE1BQ,SAF0B,eAEfC,YAFe,8BAGGT,QAAQ,CAAC,CAAD,CAHX,yCAG1BU,UAH0B,eAGdC,aAHc,eAKjC,GAAMC,CAAAA,GAAG,CAAG,6EAAZ,CACAX,SAAS,CAAC,UAAM,CACZY,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAAAG,IAAI,QAAIV,CAAAA,YAAY,CAACU,IAAD,CAAhB,EAFd,EAGH,CAJQ,CAIN,EAJM,CAAT,CAIO;AAEP,QAASC,CAAAA,cAAT,CAAwBC,EAAxB,CAA4B,CACxB,GAAMC,CAAAA,UAAU,CAAGd,SAAS,CAACe,GAAV,CAAc,SAAAC,KAAK,CAAI,CAAC;AACvC,GAAGA,KAAK,CAACH,EAAN,GAAaA,EAAhB,CAAoB,CAAoB;AACpC,wBAAWG,KAAX,EAAkBC,UAAU,CAAE,CAACD,KAAK,CAACC,UAArC,GAAiD;AACpD,CACD,MAAOD,CAAAA,KAAP,CAA4C;AAC/C,CALkB,CAAnB,CAOAf,YAAY,CAACa,UAAD,CAAZ,CAAyB;AAC5B,CAED,QAASI,CAAAA,SAAT,CAAmBC,OAAnB,CAA4B,CACxBhB,YAAY,CAAC,SAAAiB,SAAS,qCAAQA,SAAR,GAAmBD,OAAnB,IAAV,CAAZ,CAAmD;AACnDd,aAAa,CAAC,SAAAgB,SAAS,QAAIA,CAAAA,SAAS,CAAGF,OAAO,CAACG,KAAxB,EAAV,CAAb,CAAqD;AACxD,CAED,QAASC,CAAAA,cAAT,CAAwBJ,OAAxB,CAAiC,CAC7BhB,YAAY,CAAC,SAAAiB,SAAS,QAAIA,CAAAA,SAAS,CAACI,MAAV,CAAiB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACZ,EAAL,GAAYM,OAAO,CAACN,EAAxB,EAArB,CAAJ,EAAV,CAAZ,CAA4E;AAC5ER,aAAa,CAAC,SAAAgB,SAAS,QAAIA,CAAAA,SAAS,CAAGF,OAAO,CAACG,KAAxB,EAAV,CAAb,CAAqD;AACxD,CAED,QAASI,CAAAA,SAAT,EAAqB,CAAE;AACnBvB,YAAY,CAAC,EAAD,CAAZ,CACH,CAED,MACI,qBAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAE,CACrBH,SAAS,CAATA,SADqB,CAErBY,cAAc,CAAdA,cAFqB,CAGrBV,SAAS,CAATA,SAHqB,CAIrBgB,SAAS,CAATA,SAJqB,CAKrBK,cAAc,CAAdA,cALqB,CAMrBG,SAAS,CAATA,SANqB,CAOrBtB,UAAU,CAAVA,UAPqB,CAQrBC,aAAa,CAAbA,aARqB,CAAzB,EAUKN,QAVL,CADJ,CAcH,CAED,OAAQD,eAAR,CAAyBF,OAAzB,EAAkC","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction ContextProvider({children}) {\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n    const [priceItems, setPriceItems] = useState(0)\r\n    \r\n    const url = \"https://raw.githubusercontent.com/earthddx/ShoppingCartt/master/images.json\"\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, []) //fecth data from images.json when component renders\r\n    \r\n    function toggleFavorite(id) { \r\n        const updatedArr = allPhotos.map(photo => {//map the array of all photos \r\n            if(photo.id === id) {                   //to see if the photo we favorited is in the array\r\n                return {...photo, isFavorite: !photo.isFavorite} //if so, return a new obect with !isFavorite\r\n            }\r\n            return photo                                //if not, return the object\r\n        })\r\n        \r\n        setAllPhotos(updatedArr) //update array of all photos with new isFavorite property\r\n    }\r\n    \r\n    function addToCart(newItem) {\r\n        setCartItems(prevItems => [...prevItems, newItem]) //every time a new item added to the cart, \r\n        setPriceItems(prevPrice => prevPrice + newItem.price)// we have to calculate total price\r\n    }\r\n    \r\n    function removeFromCart(newItem) {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== newItem.id)) //if the item is removed from cart\r\n        setPriceItems(prevPrice => prevPrice - newItem.price)//calculate total price again\r\n    }\r\n    \r\n    function emptyCart() { //empty cart after order is complete\r\n        setCartItems([])\r\n    }\r\n    \r\n    return (\r\n        <Context.Provider value={{\r\n            allPhotos, \r\n            toggleFavorite, \r\n            cartItems, \r\n            addToCart, \r\n            removeFromCart, \r\n            emptyCart,\r\n            priceItems,\r\n            setPriceItems\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context} //export both instead of just 'Context.provider' so we could use Context "]},"metadata":{},"sourceType":"module"}